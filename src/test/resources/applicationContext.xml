<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:shards="http://www.makersoft.org/schema/shards"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.makersoft.org/schema/shards http://www.makersoft.org/schema/shards/maker-shards.xsd"
       default-lazy-init="false" default-autowire="byName">

    <context:component-scan base-package="org.makersoft.shards"/>

    <!-- Construct Map -->
    <bean id="dsMap" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <entry key="0" value-ref="lazyConnectionDataSource_1"/>
                <entry key="1" value-ref="lazyConnectionDataSource_2"/>
                <entry key="2" value-ref="lazyConnectionDataSource_3"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- mybatis 配置-->
    <bean id="shardedSqlSessionFactory" class="org.makersoft.shards.spring.ShardedSqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:/mybatis/mapper/**/*Mapper.xml"/>
        <property name="typeAliasesPackage" value="org.makersoft.shards.domain"/>
        <property name="dataSources" ref="dsMap"/>
        <property name="shardStrategyFactory">
            <bean class="org.makersoft.shards.strategy.UserShardStrategyFactory"/>
        </property>
        <property name="idGenerator">
            <bean class="org.makersoft.shards.id.uuid.ShardedUUIDGenerator"/>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.makersoft.shards.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="shardedSqlSessionFactory"/>
        <property name="annotationClass" value="org.makersoft.shards.annotation.MyBatisMapper"/>
    </bean>

    <!-- 事务配置 -->
    <bean id="transactionManager" class="org.makersoft.shards.transaction.MultiDataSourcesTransactionManager">
        <property name="dataSources">
            <list>
                <ref bean="lazyConnectionDataSource_1"/>
                <ref bean="lazyConnectionDataSource_2"/>
                <ref bean="lazyConnectionDataSource_3"/>
                <ref bean="lazyConnectionDataSource_h2"/>
            </list>
        </property>
    </bean>

    <!-- 使用annotation定义事务
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
     -->

    <!-- 定义受环境影响易变的变量 -->
    <context:property-placeholder location="classpath*:/application.properties"/>

    <!-- Simple连接池 -->
    <bean id="dataSource_1" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="url" value="${ds1.jdbc.url}"/>
        <property name="username" value="${ds1.jdbc.username}"/>
        <property name="password" value="${ds1.jdbc.password}"/>
    </bean>

    <bean id="dataSource_2" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="url" value="${ds2.jdbc.url}"/>
        <property name="username" value="${ds2.jdbc.username}"/>
        <property name="password" value="${ds2.jdbc.password}"/>
    </bean>

    <bean id="dataSource_3" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="url" value="${ds3.jdbc.url}"/>
        <property name="username" value="${ds3.jdbc.username}"/>
        <property name="password" value="${ds3.jdbc.password}"/>
    </bean>

    <bean id="dataSource_h2" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="${h2.jdbc.driver}"/>
        <property name="url" value="${h2.jdbc.url}"/>
        <property name="username" value="${h2.jdbc.username}"/>
        <property name="password" value="${h2.jdbc.password}"/>
    </bean>

    <bean id="lazyConnectionDataSource_1" name="name_1"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource" ref="dataSource_1"/>
    </bean>

    <bean id="lazyConnectionDataSource_2" name="name_2"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource" ref="dataSource_2"/>
    </bean>

    <bean id="lazyConnectionDataSource_3" name="name_3"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource" ref="dataSource_3"/>
    </bean>

    <bean id="lazyConnectionDataSource_h2" name="name_h2"
          class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <property name="targetDataSource" ref="dataSource_h2"/>
    </bean>

    <!-- 初始化数据表结构 -->
    <jdbc:initialize-database data-source="dataSource_1" ignore-failures="ALL">
        <jdbc:script location="classpath:/databases/sql/${db.type}/shards.schema.sql"/>
    </jdbc:initialize-database>

    <jdbc:initialize-database data-source="dataSource_2" ignore-failures="ALL">
        <jdbc:script location="classpath:/databases/sql/${db.type}/shards.schema.sql"/>
    </jdbc:initialize-database>

    <jdbc:initialize-database data-source="dataSource_3" ignore-failures="ALL">
        <jdbc:script location="classpath:/databases/sql/${db.type}/shards.schema.sql"/>
    </jdbc:initialize-database>
</beans>